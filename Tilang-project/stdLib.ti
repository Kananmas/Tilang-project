function s_contains(value:string , target:string) <bool> {

	if(len(value) < len(target)) {
		return false;
	}
	if(value == target) {
		return true;
	}

	var int diff = len(value)-len(target);
	var int maxLen = len(value) - diff;

	if(diff <= 0) {
		return false;
	}

	for(int i = 0; i<len(value);i+=1) {
	  
		var string current_str = "";

		if(len(value) - i == diff) {
			return false;
		}

		for(int j = 0; j<len(target); j+=1) {
			current_str += value[j+i];
		}

		if(current_str == target) {
			return true;
		}
	}


	return false;
}


function s_contains(value:string , item:char) <bool> {
	for(int i=0;i<len(value);i+=1) {
		if(value[i] == item) return true;
	}

	return -1;
}


function s_indexOf(value:string , item:char) <int> {

	for(int i = 0; i<len(value); i+=1) {
		if(value[i] == item) {
			return i;
		}
	}

	return -1;
}

function s_indexOf(value:string , item:string) <int> {

	if(len(item) > len(value)) {  return -1; }
	if(item == value) { return 0; }

	var int diff = len(value)-len(item);
	var int maxLen = len(value) - diff;
	
	if(diff <= 0) {
		return -1;
	}

	for(int i=0;i<len(value);i+=1) {

		var string str_value = "";

		if(len(value) - i == diff) {
			break;
		}


		for(int j=0;j<len(item);j+=1) {
			str_value += value[i+j];
		}

		if(str_value == item) {
			return i;
		}
	}

	return -1;
}



function s_split(value:string , item:char) <string[]> {
	var string[] result;
	var int s_length = len(value);
	var string current_slice = "";

	for(int i=0;i<s_length;i+=1) {
		if(value[i] != item) {
			current_slice += value[i];
		}
		else {
			add(result  , current_slice);
			current_slice = "";
		}
	}

	if(len(current_slice) > 0) { add(result , current_slice); }


	return result;
}


Sys.out.println(s_indexOf("vae" , "ggcc"));